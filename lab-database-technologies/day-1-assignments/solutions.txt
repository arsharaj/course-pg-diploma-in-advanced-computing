			DBMS Assignment 1

Que 1. Write a mysql statement to find the name, birth, department name, department block from the given tables.
+----+--------------+------------+------------+
| id | name         | dept_id    | birth      |
+----+--------------+------------+------------+
| 1  | Maria Gloria | 2          | 1994-03-12 |
| 2  | John Smith   | 1          | 1993-02-07 |
| 3  | Gal Rao      | 4          | 1992-09-11 |
| 4  | Jakey Smith  | 2          | 1990-08-31 |
| 5  | Rama Saho    | 1          | 1994-12-09 |
| 6  | Maria Gaga   | 4          | 1993-10-09 |
+----+--------------+------------+------------+
+---------+--------------------------+------------+
| dept_id | dept_name                | dept_block |
+---------+--------------------------+------------+
| 1       | Computer Science         | B-Block    |
| 2       | Information Technology   | C-Block    |
| 3       | Mechanical               | A-Block    |
| 4       | Electronic Communication | D-Block    |
+---------+--------------------------+------------+
Ans 1. a) create table Student (
       -> id smallint primary key auto_increment, 
       -> name varchar(20),
       -> dept_id smallint,
       -> birth date
       -> );
       b) insert into Student values
       -> (1, "Maria Gloria", 2, "1994-03-12"),
       -> (2, "John Smith", 1, "1993-02-07"),
       -> (3, "Gal Rao", 4, "1992-09-11"),
       -> (4, "Jakey Smith", 2, "1990-08-31"),
       -> (5, "Rama Saho", 1, "1994-12-09"),
       -> (6, "Maria Gaga", 4, "1993-10-09");
       c) create table Department (
       -> dept_id int primary key,
       -> dept_name varchar(25), 
       -> dept_block varchar(8)
       -> );
       d) insert into Department values 
       -> (1, "Computer Science", "B-Block"),
       -> (2, "Information Technology", "C-Block"),
       -> (3, "Mechanical", "A-Block"),
       -> (4, "Electronic Communication", "D-Block");
       e) select name, birth, dept_name, dept_block from Student natural join Department;
Out 1. +--------------+------------+--------------------------+------------+
       | name         | birth      | dept_name                | dept_block |
       +--------------+------------+--------------------------+------------+
       | Maria Gloria | 1994-03-12 | Information Technology   | C-Block    |
       | John Smith   | 1993-02-07 | Computer Science         | B-Block    |
       | Gal Rao      | 1992-09-11 | Electronic Communication | D-Block    |
       | Jakey Smith  | 1990-08-31 | Information Technology   | C-Block    |
       | Rama Saho    | 1994-12-09 | Computer Science         | B-Block    |
       | Maria Gaga   | 1993-10-09 | Electronic Communication | D-Block    |
       +--------------+------------+--------------------------+------------+
       6 rows in set (0.00 sec)

Que 2. Write a mysql statement to get name of students containing exactly five characters with ‘a’ as last letter.
+----+-------+---------+------------+
| id |  name | dept_id | birth      |
+----+-------+---------+------------+
| 1  | Maria | 2       | 1994-03-12 |
| 2  | John  | 1       | 1993-02-07 |
| 3  | Gal   | 4       | 1992-09-11 |
| 4  | Jakey | 2       | 1990-08-31 |
| 5  | Rama  | 1       | 1994-12-09 |
| 6  | Maria | 4       | 1993-10-09 |
+----+-------+---------+------------+
Ans 2. a) create table TempStudents (
       -> id smallint primary key auto_increment,
       -> name varchar(10),
       -> dept_id smallint, birth Date
       -> );
       b) insert into TempStudents values
       -> (1, "Maria", 2, "1994-03-12"),
       -> (2, "John", 1, "1993-02-07"),
       -> (3, "Gal", 4, "1992-09-11"),
       -> (4, "Jakey", 2, "1990-08-31"),
       -> (5, "Rama", 1, "1994-12-09"),
       -> (6, "Maria", 4, "1993-10-09");
       c) select name from TempStudents where name like "____a";
Out 2. +-------+
       | name  |
       +-------+
       | Maria |
       | Maria |
       +-------+
       2 rows in set (0.00 sec)

Que 3. Write a mysql statement to determine the age of each of the students.
+----+--------------+------------+------------+
| id | name         | department | birth      |
+----+--------------+------------+------------+
| 1  | Maria Gloria | CS         | 1994-03-12 |
| 2  | John Smith   | IT         | 1993-02-07 |
| 3  | Gal Rao      | CS         | 1992-09-11 |
| 4  | Jakey Smith  | EC         | 1990-08-31 |
| 5  | Rama Saho    | IT         | 1994-12-09 |
| 6  | Maria Gaga   | EC         | 1993-10-09 |
+----+--------------+------------+------------+
Ans 3. a) create table StudentDepartment (
       -> id smallint primary key auto_increment,
       -> name varchar(20),
       -> department varchar(2),
       -> birth date
       -> );
       b) insert into StudentDepartment values 
       -> (1, "Maria Gloria", "CS", 1994-03-12),
       -> (2, "John Smith", "IT", 1993-02-07),
       -> (3, "Gal Rao", "CS", 1992-09-11),
       -> (4, "Jakey Smith", "EC", 1990-08-31),
       -> (5, "Rama Saho", "IT", 1994-12-09),
       -> (6, "Maria Gaga", "EC", 1993-10-09);
       c) select name, timestampdiff(year, birth, curdate()) as age from StudentDepartment;
Out 3. +--------------+------+
       | name         | age  |
       +--------------+------+
       | Maria Gloria |   29 |
       | John Smith   |   30 |
       | Gal Rao      |   31 |
       | Jakey Smith  |   33 |
       | Rama Saho    |   28 |
       | Maria Gaga   |   29 |
       +--------------+------+
       6 rows in set (0.00 sec)

Que 4. These questions are based on the following two tables, Employee table and Reward table.

Employee Table :
+-------------+------------+-----------+----------+--------------+-------------+
| Employee_id | First_name | Last_name | Salary   | Joining_date | Departement |
+-------------+------------+-----------+----------+--------------+-------------+
| 1           | Bob        | Kinto     | 1000000  | 2019-01-20   | Finance     |
| 2           | Jerry      | Kansxo    | 6000000  | 2019-01-15   | IT          |
| 3           | Philip     | Jose      | 8900000  | 2019-02-05   | Banking     |
| 4           | John       | Abraham   | 2000000  | 2019-02-25   | Insurance   |
| 5           | Michael    | Mathew    | 2200000  | 2019-02-28   | Finance     |
| 6           | Alex       | chreketo  | 4000000  | 2019-05-10   | IT          |
| 7           | Yohan      | Soso      | 1230000  | 2019-06-20   | Banking     |
+-------------+------------+-----------+----------+--------------+-------------+

Reward Table :
+-----------------+-------------+--------+
| Employee_ref_id | date_reward | amount |
+-----------------+-------------+--------+
| 1               | 2019-05-11  | 1000   |
| 2               | 2019-02-15  | 5000   |
| 3               | 2019-04-22  | 2000   |
| 1               | 2019-06-20  | 8000   |
+-----------------+-------------+--------+
Ans 4. a) create table Employee (
       -> emp_id smallint primary key auto_increment, 
       -> first_name varchar(15),
       -> last_name varchar(15),
       -> salary integer default = 0,
       -> joining_date date,
       -> department varchar(10)
       -> );
       b) insert into Employee values
       -> (1, "Bob", "Kinto", 1000000, "2019-01-20", "Finance"),
       -> (2, "Jerry", "Kansxo", 6000000, "2019-01-15", "IT"),
       -> (3, "Philip", "Jose", 8900000, "2019-02-05", "Banking"),
       -> (4, "John", "Abraham", 2000000, "2019-02-25", "Insurance"),
       -> (5, "Michael", "Mathew", 2200000, "2019-02-28", "Finance"),
       -> (6, "Alex", "Chreketo", 4000000, "2019-05-10", "IT"),
       -> (7, "Yohan", "Soso", 1230000, "2019-06-20", "Banking");
       c) create table Reward (
       -> emp_ref_id smallint,
       -> date_reward date,
       -> amount integer
       -> );
       d) insert into Reward values
       -> (1, "2019-05-11", 1000),
       -> (2, "2019-02-15", 5000),
       -> (3, "2019-04-22", 2000),
       -> (1, "2019-06-20", 8000);

Que 1. Get all employees.
Ans 1. select * from Employee;
Out 1. +--------+------------+-----------+------------+
       | emp_id | first_name | last_name | department |
       +--------+------------+-----------+------------+
       |      1 | Bob        | Kinto     | Finance    |
       |      2 | Jerry      | Kansxo    | IT         |
       |      3 | Philip     | Jose      | Banking    |
       |      4 | John       | Abraham   | Insurance  |
       |      5 | Michael    | Mathew    | Finance    |
       |      6 | Alex       | Chreketo  | IT         |
       |      7 | Yohan      | Soso      | Banking    |
       +--------+------------+-----------+------------+
       7 rows in set (0.00 sec)

Que 2. Display the first name and last name of all employees.
Ans 2. select first_name, last_name from Employee;
Out 2. +------------+-----------+
       | first_name | last_name |
       +------------+-----------+
       | Bob        | Kinto     |
       | Jerry      | Kansxo    |
       | Philip     | Jose      |
       | John       | Abraham   |
       | Michael    | Mathew    |
       | Alex       | Chreketo  |
       | Yohan      | Soso      |
       +------------+-----------+
       7 rows in set (0.00 sec)

Que 3. Display all the values of the “First_Name” column using the alias “Employee Name".
Ans 3. select first_name as "Employee Name" from Employee;
Out 3. +---------------+
       | Employee Name |
       +---------------+
       | Bob           |
       | Jerry         |
       | Philip        |
       | John          |
       | Michael       |
       | Alex          |
       | Yohan         |
       +---------------+
       7 rows in set (0.00 sec)

Que 4. Get all “Last_Name” in lowercase.
Ans 4. select lower(first_name) from Employee;
Out 4. +-------------------+
       | lower(first_name) |
       +-------------------+
       | bob               |
       | jerry             |
       | philip            |
       | john              |
       | michael           |
       | alex              |
       | yohan             |
       +-------------------+
       7 rows in set (0.00 sec)

Que 5. Get all “Last_Name” in uppercase.
Ans 5. select upper(last_name) from Employee;
Out 5. +------------------+
       | upper(last_name) |
       +------------------+
       | KINTO            |
       | KANSXO           |
       | JOSE             |
       | ABRAHAM          |
       | MATHEW           |
       | CHREKETO         |
       | SOSO             |
       +------------------+
       7 rows in set (0.00 sec)

Que 6. Get unique “DEPARTMENT”.
Ans 6. select distinct(department) from Employee;
Out 6. +------------+
       | department |
       +------------+
       | Finance    |
       | IT         |
       | Banking    |
       | Insurance  |
       +------------+
       4 rows in set (0.00 sec)

Que 7. Get the first 4 characters of “FIRST_NAME” column.
Ans 7. select left(first_name, 4) as first from Employee;
Out 7. +-------+
       | first |
       +-------+
       | Bob   |
       | Jerr  |
       | Phil  |
       | John  |
       | Mich  |
       | Alex  |
       | Yoha  |
       +-------+
       7 rows in set (0.00 sec)

Que 8. Get the position of the letter ‘h’ in ‘John’.
Ans 8. a) select position('h' IN first_name) as Position from Employee where emp_id = 4;
       b) select locate('h', first_name) as Position from Employee where emp_id = 4; 
Out 8. +----------+
       | Position |
       +----------+
       |        3 |
       +----------+
       1 row in set (0.00 sec)

Que 9. Get all values from the “FIRST_NAME” column after removing white space on the right.
Ans 9. a) select rtrim(first_name) as First from Employee;
Out 9. +---------+
       | First   |
       +---------+
       | Bob     |
       | Jerry   |
       | Philip  |
       | John    |
       | Michael |
       | Alex    |
       | Yohan   |
       +---------+
       7 rows in set (0.00 sec)

Que 10. Get all values from the “FIRST_NAME” column after removing white space on the left.
Ans 10. select ltrim(first_name) as First from Employee;
Out 10. +---------+
        | First   |
        +---------+
        | Bob     |
        | Jerry   |
        | Philip  |
        | John    |
        | Michael |
        | Alex    |
        | Yohan   |
        +---------+
        7 rows in set (0.00 sec)

Que 11. Write the syntax to create the “employee” table.
Ans 11. a) create table Employee (
       -> emp_id smallint primary key auto_increment,
       -> first_name varchar(15),
       -> last_name varchar(15),
       -> salary integer default = 0,
       -> joining_date date,
       -> department varchar(10)
       -> );
       b) insert into Employee values
       -> (1, "Bob", "Kinto", 1000000, "2019-01-20", "Finance"),
       -> (2, "Jerry", "Kansxo", 6000000, "2019-01-15", "IT"),
       -> (3, "Philip", "Jose", 8900000, "2019-02-05", "Banking"),
       -> (4, "John", "Abraham", 2000000, "2019-02-25", "Insurance"),
       -> (5, "Michael", "Mathew", 2200000, "2019-02-28", "Finance"),
       -> (6, "Alex", "Chreketo", 4000000, "2019-05-10", "IT"),
       -> (7, "Yohan", "Soso", 1230000, "2019-06-20", "Banking");
       c) select * from Employee;
Out 11. +--------+------------+-----------+---------+--------------+------------+
        | emp_id | first_name | last_name | salary  | joining_date | department |
        +--------+------------+-----------+---------+--------------+------------+
        |      1 | Bob        | Kinto     | 1000000 | 2019-01-20   | Finance    |
        |      2 | Jerry      | Kansxo    | 6000000 | 2019-01-15   | IT         |
        |      3 | Philip     | Jose      | 8900000 | 2019-02-05   | Banking    |
        |      4 | John       | Abraham   | 2000000 | 2019-02-25   | Insurance  |
        |      5 | Michael    | Mathew    | 2200000 | 2019-02-28   | Finance    |
        |      6 | Alex       | Chreketo  | 4000000 | 2019-05-10   | IT         |
        |      7 | Yohan      | Soso      | 1230000 | 2019-06-20   | Banking    |
        +--------+------------+-----------+---------+--------------+------------+
        7 rows in set (0.00 sec)

